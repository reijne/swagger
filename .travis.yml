sudo: required
services:
- docker
language: python
python:
- '3.6'
before_install:
- docker version
- docker info
install:
- nvm install --lts
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- docker build -t phealsout/swagger:latestCI .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 phealsout/swagger:latestCI
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag phealsout/swagger:latestCI phealsout/swagger:latestCI
- docker push phealsout/swagger:latestCI
env:
  global:
  - secure: u/wtE8/Dr2nl9TKENpEpjhmZdvxGrMaLTZUaNRsA7i6GfCj/6UPNQTtztb2NgvSRM/FgT5EWXDQ6gztgz9aSXD8g1aDo6JTuZ/QMVIWsZQtElCbMH3CKpsfgfk22+22950ylHDwyYcZIUSJ8PRx27+TAtKx3scE5V3sb0dy4ZHun3ELYVnK08tYoVsZr6tnpI8fHUPBe0b0kW/9O3w5kouDcImRrqv6NZoSR/oVPMM9CXRik+VEEnrcNMxSrIUD3ZuG+P0wfNhW7Ur9g63eARX9GncwW3HUwqaaQSgzCMl8HLztyEFR5vXY5fyWYIuTlsHoM+HaYgxn6Dge95J20dYlEYYGMSwG7OSg22NUg7W5a9jf70NMgD5aFq0S2nVmvuNYwxxkWpFQA8Sy5peSzqdDDaYB7l0M7V9Eso1hiPVrUtogCoX2LY2zE7vQfMaCx+nhWwUHAkjAxzsuILk9NKDUOThK5P/OcupvFnYk8Fu5kLIPbBx+XQHxALi9pMS7EZafXasBToQIKHSoLfl5x3Wnfpz4BPZoBLUmqCAOHaJnyewsZsxJRjxK99NeA3yzei5CBX+rWLSXLDd+IToXwSBAUpbksASXD50QjiYIYTQZsHinCgVea5sAjS7zpT6y1pMD/VZRcUuJKtJEReoMki3L8L4WZxhdnScYPOqmHtDQ=
  - secure: NKhMCvNbe5qec8E1uLcNnqMvZjnkycat/kcZvxhJ+iXDRuvG/rfdMNyQXaLD0p8nawLrC1YnAxpU0FEHg+4qppmRjSwlsqgKGI77UOYwzH2G4SM/qXghcPRGcqVuy3iPi1QerX+3Z/lkwqvildO2e9+yFWnbeNfDrrfAxCZ+o0AQ68nm6qVsTobO+qb+q0nGr9BfzfqDLnYlz7QXuSCbLRSBw0IrPyiV9hLlGGSQjGZAlvwokAtalLgTqbeyd4WOGi0Wf+PZPEXuTIURThk5IO3bvCBN9iQQ0y7ixG8Glwz4apuboJ3EOFffkxASzpU5Fabv4JfU3O7WIOctxeFPninvnO3Zd4+ntPiZA5Xvi6LIdPiGsGoGK6PFyk587ku7UOX2PqUPSbHqPIvPTIpn51RZFOMmcq6YZP+A/pBabh4uN18E5fiqNPDw0pBgmKd8ywplVqvBkv+Xrj1apK0PFswZYQTwN8FM9VVKp5CBeQn0Zn/xxPKvYoxjNWrOGXZbzgaKvDp7QegMgVzdScTP4mQnYVq9/oaJ0x6Jb82EeJB+xeNiu8oRC8YeJsSKMTWcyrHJNVfCaHqFhtyn0LsoFMEpmTJi74o0d0q/iPk+KdmW1Uq31GeDaMMG+Gf8YLzB3EJ4VUVpKB+d0VlqA11FqLWzKnpFZBps7uHxu1Mjtjs=
